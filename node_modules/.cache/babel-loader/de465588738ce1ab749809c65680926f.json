{"ast":null,"code":"var _jsxFileName = \"/Users/trevoresparza/IdeaProjects/react_http_requests/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  /* FETCHING FROM API CAN BE  JUST LIKE JAVASCRIPT--- OR WE CAN USE AXIOS---NEED TO LOOK UP*/\n  // function fetchMoviesHandler(){\n  //    fetch('https://swapi.dev/api/films/')\n  //       .then(res => {\n  //           return res.json()\n  //       }).then(data => {\n  //           const transformedMovies = data.results.map(movieData => {\n  //               return {\n  //                   id : movieData.episode_id,\n  //                   title : movieData.title,\n  //                   openingText : movieData.opening_crawl,\n  //                   releaseDate : movieData.release_date\n  //               };\n  //           });\n  //            setMovies(transformedMovies);\n  //   });\n  // }\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, []);\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch('https://swapi.dev/api/films/');\n\n      if (!res.ok) {\n        throw new Error('Oops...Something went wrong!');\n      }\n\n      const data = await res.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, \"Trying to connect.....\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"LOADING........ \");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","res","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","content","length"],"sources":["/Users/trevoresparza/IdeaProjects/react_http_requests/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    /* FETCHING FROM API CAN BE  JUST LIKE JAVASCRIPT--- OR WE CAN USE AXIOS---NEED TO LOOK UP*/\n\n    // function fetchMoviesHandler(){\n    //    fetch('https://swapi.dev/api/films/')\n    //       .then(res => {\n    //           return res.json()\n    //       }).then(data => {\n    //           const transformedMovies = data.results.map(movieData => {\n    //               return {\n    //                   id : movieData.episode_id,\n    //                   title : movieData.title,\n    //                   openingText : movieData.opening_crawl,\n    //                   releaseDate : movieData.release_date\n    //               };\n    //           });\n    //            setMovies(transformedMovies);\n    //   });\n    // }\n\n    useEffect(() => {\n        fetchMoviesHandler();\n    },[]);\n\n    async function fetchMoviesHandler() {\n        setIsLoading(true);\n        setError(null);\n\n        try {\n            const res = await fetch('https://swapi.dev/api/films/')\n\n            if(!res.ok){\n                throw new Error('Oops...Something went wrong!');\n            }\n            const data = await res.json();\n            const transformedMovies = data.results.map(movieData => {\n                return {\n                    id: movieData.episode_id,\n                    title: movieData.title,\n                    openingText: movieData.opening_crawl,\n                    releaseDate: movieData.release_date\n                };\n            });\n            setMovies(transformedMovies);\n        } catch (error){\n            setError(error.message);\n        }\n        setIsLoading(false);\n    }\n\n    let content = <p>Trying to connect.....</p>;\n    if(movies.length > 0){\n        content = <MoviesList movies={movies}/>;\n    }\n    if(error){\n        content = <p>{error}</p>\n    }\n    if(isLoading){\n        content = <p>LOADING........ </p>;\n    }\n\n    return (\n        <React.Fragment>\n            <section>\n                <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n            </section>\n            <section>{content}</section>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EAEX,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACZS,kBAAkB;EACrB,CAFQ,EAEP,EAFO,CAAT;;EAIA,eAAeA,kBAAf,GAAoC;IAChCH,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IAEA,IAAI;MACA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAAvB;;MAEA,IAAG,CAACD,GAAG,CAACE,EAAR,EAAW;QACP,MAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;MACH;;MACD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;MACA,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAI;QACpD,OAAO;UACHC,EAAE,EAAED,SAAS,CAACE,UADX;UAEHC,KAAK,EAAEH,SAAS,CAACG,KAFd;UAGHC,WAAW,EAAEJ,SAAS,CAACK,aAHpB;UAIHC,WAAW,EAAEN,SAAS,CAACO;QAJpB,CAAP;MAMH,CAPyB,CAA1B;MAQAtB,SAAS,CAACY,iBAAD,CAAT;IACH,CAhBD,CAgBE,OAAOT,KAAP,EAAa;MACXC,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;IACH;;IACDrB,YAAY,CAAC,KAAD,CAAZ;EACH;;EAED,IAAIsB,OAAO,gBAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4BAAd;;EACA,IAAGzB,MAAM,CAAC0B,MAAP,GAAgB,CAAnB,EAAqB;IACjBD,OAAO,gBAAG,oBAAC,UAAD;MAAY,MAAM,EAAEzB,MAApB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAV;EACH;;EACD,IAAGI,KAAH,EAAS;IACLqB,OAAO,gBAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAIrB,KAAJ,CAAV;EACH;;EACD,IAAGF,SAAH,EAAa;IACTuB,OAAO,gBAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,sBAAV;EACH;;EAED,oBACI,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAQ,OAAO,EAAEnB,kBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADJ,CADJ,eAII;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAUmB,OAAV,CAJJ,CADJ;AAQH;;AAED,eAAe1B,GAAf"},"metadata":{},"sourceType":"module"}